export default function parseArgs(argsStr) {
    const argsObj = {
        named: {},
        positional: [],
        optional: []
    }
    let pos, end
    const push = (el, arr) => {(!(el in arr)) && arr.push(el)}

    while(argsStr.length > 0) {
        if(argsStr.charAt(0) === "-") {
            argsStr.charAt(1) === "-" ?
                (pos = argsStr.slice(0, argsStr.match(" ").index).match(":")?.index) ?
                    argsStr.charAt(pos + 1) === `"` ?
                        (argsObj.named[argsStr.slice(2, pos)] = argsStr.slice(pos + 2, (end = argsStr.slice(pos + 2).match(`"`).index + pos + 3) - 1)) :
                        (argsObj.named[argsStr.slice(2, pos)] = argsStr.slice(pos + 1, (end = argsStr.match(" ").index))) :
                    push(argsStr.slice(2, (end = argsStr.match(" ").index)), argsObj.optional) :
                argsStr.charAt(2) === ":" ?
                    argsStr.charAt(3) === `"` ?
                        (argsObj.named[argsStr.charAt(1)] = argsStr.slice(4, (end = argsStr.slice(4).match(`"`).index + 5) - 1)) :
                        (argsObj.named[argsStr.charAt(1)] = argsStr.slice(3, (end = argsStr.match(" ").index))) :
                    Array.from(argsStr.slice(1, (end = argsStr.match(" ").index))).forEach(char => push(char, argsObj.optional))
        }
        else if(argsStr.charAt(0).match(/[^-]/)) {
            argsStr.charAt(0) === `"` ?
                push(argsStr.slice(1, (end = argsStr.slice(1).match(`"`).index + 2) - 1), argsObj.positional) :
                push(argsStr.slice(0, (end = argsStr.match(" ").index)), argsObj.positional)
        }
        argsStr = argsStr.slice(end + 1)
    }
    return argsObj
}

/*console.log(parseArgs('-f:5 --forever:"in your arms" -jkl "hey hello hiii" '))*/